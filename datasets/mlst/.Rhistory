#plot stacked bar plot of composition of all the samples, for control samples
dfd %>% select(IDInBactocap, mapped_reads, targ_species, sample_composition, field_control) %>%
filter(!(targ_species == '*')) %>%
filter(field_control == 'field') %>%
ggplot(., aes(fill=targ_species, y=mapped_reads, x=IDInBactocap)) +
geom_bar(position="fill", stat="identity") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
facet_grid( ~ sample_composition, scales = "free", space='free') +
theme_minimal()
#plot stacked bar plot of composition of all the samples, for control samples
dfd %>% select(IDInBactocap, mapped_reads, targ_species, sample_composition, field_control) %>%
filter(!(targ_species == '*')) %>%
filter(field_control == 'field') %>%
ggplot(., aes(fill=targ_species, y=mapped_reads, x=IDInBactocap)) +
geom_bar(position="fill", stat="identity") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
facet_grid( ~ sample_composition, scales = "free", space='free')
t<-dfd %>% group_by(IDInBactocap) %>%
filter(field_control == 'control') %>%
group_by(IDInBactocap, sample_composition) %>%
summarise(unmapped_sum = sum(unmapped_reads), mapped_sum = sum(mapped_reads)) %>%
mutate(proportion_mapped = mapped_sum/(mapped_sum+unmapped_sum))
#plot stacked bar plot of composition of all the samples, for control samples
dfd %>% select(IDInBactocap, mapped_reads, targ_species, sample_composition, field_control) %>%
filter(!(targ_species == '*')) %>%
filter(field_control == 'field') %>%
ggplot(., aes(fill=targ_species, y=mapped_reads, x=IDInBactocap)) +
geom_bar(position="fill", stat="identity") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
facet_grid( ~ sample_composition, scales = "free", space='free')
#plot stacked bar plot of composition of all the samples, for control samples
u <- dfd %>% select(IDInBactocap, mapped_reads, targ_species, sample_composition, field_control) %>%
filter(!(targ_species == '*')) %>%
filter(field_control == 'field') %>%
ggplot(., aes(fill=targ_species, y=mapped_reads, x=IDInBactocap)) +
geom_bar(position="fill", stat="identity") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
facet_grid( ~ sample_composition, scales = "free", space='free')
t
#plot above for field samples
sample_composition_stacked <- dfc %>% select(IDInBactocap, mapped_reads, targ_species, sample_composition, field_control) %>%
filter(!(targ_species == '*')) %>%
filter(field_control == 'field') %>%
ggplot(., aes(fill=targ_species, y=mapped_reads, x=IDInBactocap)) +
geom_bar(position="fill", stat="identity") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
facet_grid( ~ sample_composition, scales = "free", space='free') +
theme_minimal()
sample_composition_stacked
u
proportion_mapped_field
proportion_mapped_field
#samples by % on target mapping
on_target_mapping_boxplot <- dfd %>%
filter(locus != '*') %>%
group_by(IDInBactocap, on_or_off_targ, sample_composition) %>%
summarise(readonorofftarg = sum(mapped_reads)/total_mapped) %>%
filter(on_or_off_targ == 'on_target') %>% distinct() %>%
ggplot(aes(x=sample_composition, y = readonorofftarg, colour= sample_composition))+
geom_boxplot(outlier.colour = NA, alpha = 0.5, width = 0.5) +
geom_jitter() +
theme_minimal()+
ylab('% Reads On-Target') +
xlab('PCR +ve organism in sample')
on_target_mapping_boxplot
sample_composition_stacked
proportion_mapped_field
plot_grid(proportion_mapped_field, sample_composition_stacked, align = 'v', ncol = 1, rel_widths = n_x)
plotslist <- c(proportion_mapped_field, sample_composition_stacked)
plotslist <- list(proportion_mapped_field, sample_composition_stacked)
n_x = sapply(plotslist, function(p) {
max(layer_data(p, 1)$x)
})
plot_grid(proportion_mapped_field, sample_composition_stacked, align = 'v', ncol = 1, rel_widths = n_x)
proportion_mapped_field <- dfd %>% group_by(IDInBactocap) %>%
filter(field_control == 'field') %>%
group_by(IDInBactocap, sample_composition) %>%
summarise(unmapped_sum = sum(unmapped_reads), mapped_sum = sum(mapped_reads)) %>%
pivot_longer(cols = c('unmapped_sum', 'mapped_sum'), names_to = 'mapped_or_unmapped', values_to = 'reads') %>%
ggplot(aes(x=IDInBactocap, y=reads, fill = mapped_or_unmapped)) +
geom_bar(position="fill", stat="identity") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
facet_grid( ~ sample_composition, scales = "free", space='free')
plotslist <- list(proportion_mapped_field, sample_composition_stacked)
n_x = sapply(plotslist, function(p) {
max(layer_data(p, 1)$x)
})
plot_grid(proportion_mapped_field, sample_composition_stacked, align = 'v', ncol = 1, rel_widths = n_x)
proportion_mapped_field <- dfd %>% group_by(IDInBactocap) %>%
filter(field_control == 'field') %>%
group_by(IDInBactocap, sample_composition) %>%
summarise(unmapped_sum = sum(unmapped_reads), mapped_sum = sum(mapped_reads)) %>%
pivot_longer(cols = c('unmapped_sum', 'mapped_sum'), names_to = 'mapped_or_unmapped', values_to = 'reads') %>%
ggplot(aes(x=IDInBactocap, y=reads, fill = mapped_or_unmapped)) +
geom_bar(position="fill", stat="identity") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
strip.background = element_blank(),
strip.text.x = element_blank())+
facet_grid( ~ sample_composition, scales = "free", space='free')
plotslist <- list(proportion_mapped_field, sample_composition_stacked)
n_x = sapply(plotslist, function(p) {
max(layer_data(p, 1)$x)
})
plot_grid(proportion_mapped_field, sample_composition_stacked, align = 'v', ncol = 1, rel_widths = n_x)
proportion_mapped_field <- dfd %>% group_by(IDInBactocap) %>%
filter(field_control == 'field') %>%
group_by(IDInBactocap, sample_composition) %>%
summarise(unmapped_sum = sum(unmapped_reads), mapped_sum = sum(mapped_reads)) %>%
pivot_longer(cols = c('unmapped_sum', 'mapped_sum'), names_to = 'mapped_or_unmapped', values_to = 'reads') %>%
ggplot(aes(x=IDInBactocap, y=reads, fill = mapped_or_unmapped)) +
geom_bar(position="fill", stat="identity") +
theme_minimal() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
strip.background = element_blank(),
strip.text.x = element_blank())+
facet_grid( ~ sample_composition, scales = "free", space='free')
proportion_mapped_field
#get proportion mapped to unmapped for the control samples
proportion_mapped_field <- dfd %>% group_by(IDInBactocap) %>%
filter(field_control == 'field') %>%
group_by(IDInBactocap, sample_composition) %>%
summarise(unmapped_sum = sum(unmapped_reads), mapped_sum = sum(mapped_reads)) %>%
pivot_longer(cols = c('unmapped_sum', 'mapped_sum'), names_to = 'mapped_or_unmapped', values_to = 'reads') %>%
ggplot(aes(x=IDInBactocap, y=reads, fill = mapped_or_unmapped)) +
geom_bar(position="fill", stat="identity") +
theme_minimal() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
strip.background = element_blank(),
strip.text.x = element_blank())+
facet_grid( ~ sample_composition, scales = "free", space='free') +
ylab("Proportion_Of_Total_Reads_Mapped")
sample_composition_stacked <- dfc %>% select(IDInBactocap, mapped_reads, targ_species, sample_composition, field_control) %>%
filter(!(targ_species == '*')) %>%
filter(field_control == 'field') %>%
ggplot(., aes(fill=targ_species, y=mapped_reads, x=IDInBactocap)) +
geom_bar(position="fill", stat="identity") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
facet_grid( ~ sample_composition, scales = "free", space='free') +
ylab("Proportion_Reads_Mapped_To_Organism_Targets") +
theme_minimal()
proportion_mapped_field <- dfd %>% group_by(IDInBactocap) %>%
filter(field_control == 'field') %>%
group_by(IDInBactocap, sample_composition) %>%
summarise(unmapped_sum = sum(unmapped_reads), mapped_sum = sum(mapped_reads)) %>%
pivot_longer(cols = c('unmapped_sum', 'mapped_sum'), names_to = 'mapped_or_unmapped', values_to = 'reads') %>%
ggplot(aes(x=IDInBactocap, y=reads, fill = mapped_or_unmapped)) +
geom_bar(position="fill", stat="identity") +
theme_minimal() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
strip.background = element_blank(),
strip.text.x = element_blank())+
facet_grid( ~ sample_composition, scales = "free", space='free') +
ylab("Proportion_Of_Total_Reads_Mapped")
plotslist <- list(proportion_mapped_field, sample_composition_stacked)
n_x = sapply(plotslist, function(p) {
max(layer_data(p, 1)$x)
})
plot_grid(proportion_mapped_field, sample_composition_stacked, align = 'v', ncol = 1, rel_widths = n_x)
#get proportion mapped to unmapped for the control samples
proportion_mapped_field <- dfd %>% group_by(IDInBactocap) %>%
filter(field_control == 'field') %>%
group_by(IDInBactocap, sample_composition) %>%
summarise(unmapped_sum = sum(unmapped_reads), mapped_sum = sum(mapped_reads)) %>%
pivot_longer(cols = c('unmapped_sum', 'mapped_sum'), names_to = 'mapped_or_unmapped', values_to = 'reads') %>%
ggplot(aes(x=IDInBactocap, y=reads, fill = mapped_or_unmapped)) +
geom_bar(position="fill", stat="identity") +
theme_minimal() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
strip.background = element_blank(),
strip.text.x = element_blank())+
facet_grid( ~ sample_composition, scales = "free", space='free') +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
ylab("Proportion_Of_Total_Reads_Mapped")
plot_grid(proportion_mapped_field, sample_composition_stacked, align = 'v', ncol = 1, rel_widths = n_x)
#plot above for field samples
sample_composition_stacked <- dfc %>% select(IDInBactocap, mapped_reads, targ_species, sample_composition, field_control) %>%
filter(!(targ_species == '*')) %>%
filter(field_control == 'field') %>%
ggplot(., aes(fill=targ_species, y=mapped_reads, x=IDInBactocap)) +
geom_bar(position="fill", stat="identity") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
facet_grid( ~ sample_composition, scales = "free", space='free') +
ylab("Proportion_Reads_Mapped_To_Organism_Targets") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
theme_minimal()
plot_grid(proportion_mapped_field, sample_composition_stacked, align = 'v', ncol = 1, rel_widths = n_x)
sample_composition_stacked <- dfc %>% select(IDInBactocap, mapped_reads, targ_species, sample_composition, field_control) %>%
filter(!(targ_species == '*')) %>%
filter(field_control == 'field') %>%
ggplot(., aes(fill=targ_species, y=mapped_reads, x=IDInBactocap)) +
geom_bar(position="fill", stat="identity") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
facet_grid( ~ sample_composition, scales = "free", space='free') +
ylab("Proportion_Reads_Mapped_To_Organism_Targets") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
theme_minimal()
plot_grid(proportion_mapped_field, sample_composition_stacked, align = 'v', ncol = 1, rel_widths = n_x)
plotslist <- list(proportion_mapped_field, sample_composition_stacked)
n_x = sapply(plotslist, function(p) {
max(layer_data(p, 1)$x)
})
plot_grid(proportion_mapped_field, sample_composition_stacked, align = 'v', ncol = 1, rel_widths = n_x)
#plot above for field samples
sample_composition_stacked <- dfc %>% select(IDInBactocap, mapped_reads, targ_species, sample_composition, field_control) %>%
filter(!(targ_species == '*')) %>%
filter(field_control == 'field') %>%
ggplot(., aes(fill=targ_species, y=mapped_reads, x=IDInBactocap)) +
geom_bar(position="fill", stat="identity") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
facet_grid( ~ sample_composition, scales = "free", space='free') +
ylab("Proportion_Reads_Mapped_To_Organism_Targets") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
theme_minimal()
sample_composition_stacked
#plot above for field samples
sample_composition_stacked <- dfc %>% select(IDInBactocap, mapped_reads, targ_species, sample_composition, field_control) %>%
filter(!(targ_species == '*')) %>%
filter(field_control == 'field') %>%
ggplot(., aes(fill=targ_species, y=mapped_reads, x=IDInBactocap)) +
geom_bar(position="fill", stat="identity") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
facet_grid( ~ sample_composition, scales = "free", space='free') +
ylab("Proportion_Reads_Mapped_To_Organism_Targets") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
sample_composition_stacked
#get proportion mapped to unmapped for the control samples
proportion_mapped_field <- dfd %>% group_by(IDInBactocap) %>%
filter(field_control == 'field') %>%
group_by(IDInBactocap, sample_composition) %>%
summarise(unmapped_sum = sum(unmapped_reads), mapped_sum = sum(mapped_reads)) %>%
pivot_longer(cols = c('unmapped_sum', 'mapped_sum'), names_to = 'mapped_or_unmapped', values_to = 'reads') %>%
ggplot(aes(x=IDInBactocap, y=reads, fill = mapped_or_unmapped)) +
geom_bar(position="fill", stat="identity") +
theme_minimal() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
strip.background = element_blank(),
strip.text.x = element_blank())+
facet_grid( ~ sample_composition, scales = "free", space='free')+
ylab("Proportion_Of_Total_Reads_Mapped")
proportion_mapped_field
plotslist <- list(proportion_mapped_field, sample_composition_stacked)
n_x = sapply(plotslist, function(p) {
max(layer_data(p, 1)$x)
})
plot_grid(proportion_mapped_field, sample_composition_stacked, align = 'v', ncol = 1, rel_widths = n_x)
#Plotting coverage
dfc %>%
filter(targ_mean_doc > 100) %>%
ggplot(aes(x = IDInBactocap, y = targ_mean_doc)) +
geom_jitter() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
facet_grid( ~ sample_composition, scales = "free", space='free')
#plot
outputdf %>%
ggplot(aes(x=doc, y=frac_targs, fill=IDInBactocap, colour=sample_composition)) +
geom_line()+
theme_minimal()
gettargscov <- function(df, covthreshold) {
df %>% filter(on_or_off_targ == 'on_target') %>%
filter(field_control == 'field' )%>%
mutate(mean_doc = (mapped_reads*75)/sequence_length) %>%
filter(mean_doc < covthreshold) %>%
group_by(IDInBactocap, num_targs, sample_composition) %>% tally() %>% mutate(doc = covthreshold)
}
#create stepwise d.o.c sequence
x <- seq(1,10000,10)
#calculate decreasing d.o.c over all targs for each sample
outputdf <- NULL
for (num in x) {
s <- gettargscov(dfe, num)
outputdf <- rbind(outputdf, s)
}
#calculate mapped targets as a fraction of the total
outputdf$frac_targs = outputdf$n/outputdf$num_targs
#plot
outputdf %>%
ggplot(aes(x=doc, y=frac_targs, fill=IDInBactocap, colour=sample_composition)) +
geom_line()+
theme_minimal()
gettargscov <- function(df, covthreshold) {
df %>% filter(on_or_off_targ == 'on_target') %>%
filter(field_control == 'field' )%>%
mutate(mean_doc = (mapped_reads*75)/sequence_length) %>%
filter(mean_doc > covthreshold) %>%
group_by(IDInBactocap, num_targs, sample_composition) %>% tally() %>% mutate(doc = covthreshold)
}
x <- seq(1,10000,10)
#calculate decreasing d.o.c over all targs for each sample
outputdf <- NULL
for (num in x) {
s <- gettargscov(dfe, num)
outputdf <- rbind(outputdf, s)
}
#samples by % on target mapping
on_target_mapping_boxplot <- dfd %>%
filter(locus != '*') %>%
group_by(IDInBactocap, on_or_off_targ, sample_composition) %>%
summarise(readonorofftarg = sum(mapped_reads)/total_mapped) %>%
filter(on_or_off_targ == 'on_target') %>% distinct() %>%
ggplot(aes(x=sample_composition, y = readonorofftarg, colour= sample_composition))+
geom_boxplot(outlier.colour = NA, alpha = 0.5, width = 0.5) +
geom_jitter() +
theme_minimal()+
ylab('% Reads On-Target') +
xlab('PCR +ve organism in sample')
#samples by % on target mapping
on_target_mapping_boxplot <- dfd %>%
filter(locus != '*') %>%
group_by(IDInBactocap, on_or_off_targ, sample_composition) %>%
summarise(readonorofftarg = sum(mapped_reads)/total_mapped) %>%
filter(on_or_off_targ == 'on_target') %>% distinct() %>%
ggplot(aes(x=sample_composition, y = readonorofftarg, colour= sample_composition))+
geom_boxplot(outlier.colour = NA, alpha = 0.5, width = 0.5) +
geom_jitter() +
theme_minimal()+
ylab('% Reads On-Target') +
xlab('PCR +ve organism in sample')
#plot
outputdf %>%
ggplot(aes(x=doc, y=frac_targs, fill=IDInBactocap, colour=sample_composition)) +
geom_line()+
theme_minimal()
#calculate mapped targets as a fraction of the total
outputdf$frac_targs = outputdf$n/outputdf$num_targs
#plot
outputdf %>%
ggplot(aes(x=doc, y=frac_targs, fill=IDInBactocap, colour=sample_composition)) +
geom_line()+
theme_minimal()
frac_mapped_lim <- outputdf %>%
ggplot(aes(x=doc, y=frac_targs, fill=IDInBactocap, colour=sample_composition)) +
geom_line()+
xlim(1,100) +
theme_minimal() +
theme_minimal() +
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
frac_mapped_lim
#plot
frac_mapped<- outputdf %>%
ggplot(aes(x=doc, y=frac_targs, fill=IDInBactocap, colour=sample_composition)) +
geom_line()+
theme(legend.title = element_blank()) +
theme_minimal()
frac_mapped_lim <- outputdf %>%
ggplot(aes(x=doc, y=frac_targs, fill=IDInBactocap, colour=sample_composition)) +
geom_line()+
xlim(1,100) +
theme_minimal() +
theme_minimal() +
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
#plot dec cov plots
plot_grid(frac_mapped, frac_mapped_lim, align = 'h')
frac_mapped<- outputdf %>%
ggplot(aes(x=doc, y=frac_targs, fill=IDInBactocap, colour=sample_composition)) +
geom_line()+
theme(legend.title = element_blank()) +
theme_minimal()
frac_mapped
frac_mapped<- outputdf %>%
ggplot(aes(x=doc, y=frac_targs, fill=IDInBactocap, colour=sample_composition)) +
geom_line()+
theme((legend.position = "none")) +
theme_minimal()
frac_mapped
#plot
frac_mapped<- outputdf %>%
ggplot(aes(x=doc, y=frac_targs, fill=IDInBactocap, colour=sample_composition)) +
geom_line()+
theme_minimal() +
theme((legend.position = "none"))
#plot
frac_mapped<- outputdf %>%
ggplot(aes(x=doc, y=frac_targs, fill=IDInBactocap, colour=sample_composition)) +
geom_line()+
theme((legend.position = "none"))
frac_mapped<- outputdf %>%
ggplot(aes(x=doc, y=frac_targs, fill=IDInBactocap, colour=sample_composition)) +
geom_line()+
theme(legend.position = "none")
frac_mapped
#plot
frac_mapped<- outputdf %>%
ggplot(aes(x=doc, y=frac_targs, fill=IDInBactocap, colour=sample_composition)) +
geom_line()+
theme(legend.position = "none") +
theme_minimal()
#plot
frac_mapped<- outputdf %>%
ggplot(aes(x=doc, y=frac_targs, fill=IDInBactocap, colour=sample_composition)) +
geom_line()+
theme_minimal() +
theme(legend.position = "none")
frac_mapped<- outputdf %>%
ggplot(aes(x=doc, y=frac_targs, fill=IDInBactocap, colour=sample_composition)) +
geom_line()+
theme_minimal(legend.position = "none") +
theme(legend.position = "none")
frac_mapped<- outputdf %>%
ggplot(aes(x=doc, y=frac_targs, fill=IDInBactocap, colour=sample_composition)) +
geom_line()+
theme_minimal() +
theme(legend.position = "none")
frac_mapped
#plot dec cov plots
plot_grid(frac_mapped, frac_mapped_lim, align = 'h')
on_target_mapping_boxplot
toprow <- on_target_mapping_boxplot
###########################################################################
#Plotting coverage
dfc %>%
filter(targ_mean_doc > 100) %>%
ggplot(aes(x = IDInBactocap, y = targ_mean_doc)) +
geom_jitter() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
facet_grid( ~ sample_composition, scales = "free", space='free')
#fraction of total readset mapped
dfc %>% select(IDInBactocap, frac_mapped, sample_composition) %>% distinct() %>%
ggplot(aes(x = IDInBactocap, y = frac_mapped)) +
geom_jitter() +
theme_minimal() +
facet_grid( ~ sample_composition, scales = "free", space='free') +
theme_minimal()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
ylab('% Of Total Reads Mapped') +
xlab('ID')
#fraction of reads mapped per-sample
frac_per_sample_map_boxplot <- dfd %>%
distinct(frac_mapped, sample_composition) %>%
ggplot(aes(x=sample_composition, y = frac_mapped, colour = sample_composition)) +
geom_boxplot(outlier.colour = NA, alpha = 0.5, width = 0.5) +
geom_jitter()+
theme_minimal()+
ylab('% Of Total Reads Mapped') +
xlab('PCR +ve organism in sample')
#samples by % on target mapping
on_target_mapping_boxplot <- dfd %>%
filter(locus != '*') %>%
group_by(IDInBactocap, on_or_off_targ, sample_composition) %>%
summarise(readonorofftarg = sum(mapped_reads)/total_mapped) %>%
filter(on_or_off_targ == 'on_target') %>% distinct() %>%
ggplot(aes(x=sample_composition, y = readonorofftarg, colour= sample_composition))+
geom_boxplot(outlier.colour = NA, alpha = 0.5, width = 0.5) +
geom_jitter() +
theme_minimal()+
ylab('% Reads On-Target') +
xlab('PCR +ve organism in sample')
on_target_mapping_boxplot
#fraction of reads mapped per-sample
frac_per_sample_map_boxplot <- dfd %>%
distinct(frac_mapped, sample_composition) %>%
ggplot(aes(x=sample_composition, y = frac_mapped, colour = sample_composition)) +
geom_boxplot(outlier.colour = NA, alpha = 0.5, width = 0.5) +
geom_jitter()+
theme_minimal()+
ylab('% Of Total Reads Mapped') +
xlab('PCR +ve organism in sample')
frac_per_sample_map_boxplot
#fraction of reads mapped per-sample
frac_per_sample_map_boxplot <- dfd %>%
distinct(frac_mapped, sample_composition) %>%
ggplot(aes(x=sample_composition, y = frac_mapped, colour = sample_composition)) +
geom_boxplot(outlier.colour = NA, alpha = 0.5, width = 0.5) +
geom_jitter()+
theme(legend.position = "none") +
theme_minimal()+
ylab('% Of Total Reads Mapped') +
xlab('PCR +ve organism in sample')
frac_per_sample_map_boxplot
frac_per_sample_map_boxplot
#fraction of reads mapped per-sample
frac_per_sample_map_boxplot <- dfd %>%
distinct(frac_mapped, sample_composition) %>%
ggplot(aes(x=sample_composition, y = frac_mapped, colour = sample_composition)) +
geom_boxplot(outlier.colour = NA, alpha = 0.5, width = 0.5) +
geom_jitter()+
theme_minimal()+
theme(legend.position = "none") +
ylab('% Of Total Reads Mapped') +
xlab('PCR +ve organism in sample')
frac_per_sample_map_boxplot
plot_grid(frac_per_sample_map_boxplot,on_target_mapping_boxplot, align = h)
plot_grid(frac_per_sample_map_boxplot,on_target_mapping_boxplot, align = 'h')
#plot dec cov plots
bottomrow <- plot_grid(frac_mapped, frac_mapped_lim, align = 'h')
toprow <- plot_grid(frac_per_sample_map_boxplot,on_target_mapping_boxplot, align = 'h')
plot_grid(toprow, bottomrow, align = 'v', ncol = 1)
#plot dec cov plots
bottomrow <- plot_grid(frac_mapped, frac_mapped_lim, align = 'h',labels = c('C', 'D'))
toprow <- plot_grid(frac_per_sample_map_boxplot,on_target_mapping_boxplot, align = 'h', labels = c('A', 'B'))
plot_grid(toprow, bottomrow, align = 'v', ncol = 1)
